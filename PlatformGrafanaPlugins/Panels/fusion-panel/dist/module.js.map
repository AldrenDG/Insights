{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"emotion\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./CombinationSeriesParser.tsx","webpack:///./SingleSeriesParser.tsx","webpack:///./SimplePanel.tsx","webpack:///./MultiSeriesParser.tsx","webpack:///./WidgetChartsParser.tsx","webpack:///./OptionsGroup.tsx","webpack:///./types.ts","webpack:///./SingleSeriesEditorUtils.tsx","webpack:///./FusionEditor.tsx","webpack:///./WidgetEditorUtils.tsx","webpack:///./MultiSeriesEditorUtils.tsx","webpack:///./CombinationSeriesEditorUtils.tsx","webpack:///./AddRemoveEditorUtils.tsx","webpack:///./ChartOptions.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__read","iterator","e","ar","next","done","push","error","__makeTemplateObject","cooked","raw","formatChartType_Multi_Series_Stacked_Column_Single_Dual_Y_Axis","props","categories","dataset","category","data","lineset","state","array","series","fields","forEach","obj","values","buffer","val","options","charttype","charts","multiseries","ColumnLineAreaSDAxis","MSStackedColumnSingleDualAxis","msScrollList","fetchChartData","chartType","includes","formatChartType_Multi_Series_Column_Line_Area_Single_Dual_Y_Axis","format_StackedArea_Line_Dual_Y_Axis","formatChartType_MultiSeries_Stacked_Column2D_Line_Dual_Y_Axis","undefined","formatScrollCharts","formatMultiSeriesChartType","dials","dial","labels","formatAnguarGuage","formatNonScrollCharts","render","id","style","height","className","width","processChartAfterScriptLoad","FusionCharts","window","theme","chartConfig","rootID","type","renderAt","dataFormat","containerBackgroundOpacity","dataEmptyMessage","dataLoadStartMessage","dataLoadStartMessageFontSize","dataSource","chart","bgColor","colors","bg1","canvasbgColor","valueFontColor","text","labelFontColor","isDark","palette","white","dark1","legendItemFontColor","xAxisFontColor","valueBgColor","radarfillcolor","ready","fusioncharts","resizeTo","Component","getStyles","isExpanded","isNested","box","pageHeaderBorder","spacing","formSpacingBase","toggle","textWeak","typography","size","lg","sm","header","md","formLabel","weight","semibold","body","xl","title","children","defaultToClosed","renderTitle","nested","onToggle","toggleExpand","styles","onClick","chartTypes","label","scrollCharts","pieAndDoughnutCharts","fontFamily","FontSizes","captionAlignment","axisPositions","themes","rotateValues","valuePositions","multiSeries","multiSeriesChats","combinationCharts","combinationWithLine","widgetCharts","onChanged","field","event","target","onOptionsChange","onValueChanged","onSwitched","FormField","Switch","rows","onChange","placeholder","atext","required","advanceChartOptions","JSON","parse","chartOptions","dynamicProps","dkey","disabled","btnEnabled","staticProps","staticChartOptions","statiProps","SbtnEnabled","defaultValue","find","item","isGauge","labelWidth","inputWidth","majorTMNumber","minorTMNumber","padding","color","majorTMColor","majorTMAlpha","majorTMHeight","majorTMThickness","minorTMColor","minorTMAlpha","minorTMHeight","minorTMThickness","isArea","plotFillColor","isDualAxis","syaxisname","formatnumberscale","snumbersuffix","plottooltext","isScrollCombi2D","isScrollCharts","numVisiblePlot","scrollheight","scrollColor","labelClass","checked","flatScrollBars","scrollShowButtons","isBarAndColumnChart","placeValuesInside","isParetoChart","isLineChart","showLineValues","lineColor","lineAlpha","lineThickness","lineDashed","lineDashLen","lineDashGap","isPieOrDoughnutChart","showPercentValues","defaultCenterLabel","centerLabel","minAngleForValue","enableMultiSlicing","isWaterfallChart","positiveColor","negativeColor","showSumAtEnd","sumlabel","connectorColor","connectorAlpha","connectorThickness","isZoomlineChart","pixelsPerPoint","pixelsPerLabel","numVisibleLabels","zoomPaneBgColor","zoomPaneBgAlpha","caption","captionFontBold","captionFontColor","subCaption","subcaptionFontColor","subcaptionFontBold","xAxisName","xAxisNameFontBold","xAxisNameBgColor","xAxisNameBorderColor","xAxisNameBorderThickness","xAxisNameBorderRadius","xAxisNameBorderPadding","yAxisName","yAxisNameFontBold","yAxisNameBgColor","yAxisNameBorderColor","yAxisNameBorderThickness","yAxisNameFontColor","xAxisNameFontColor","yAxisNameBorderRadius","yAxisNameBorderPadding","yAxisMinValue","yAxisMaxValue","palettecolors","toolbarButtonColor","gaugeFillMix","gaugeFillRatio","exportEnabled","showToolTip","toolTipColor","toolTipBgColor","toolTipBorderThickness","toolTipBgAlpha","toolTipBorderRadius","toolTipPadding","showValues","numberPrefix","valueFontBold","labelFontBold","pivotRadius","pivotFillMix","pivotFillRatio","pivotFillColor","showBorder","borderColor","borderThickness","borderAlpha","drawCrossLine","crosslinecolor","crossLineAlpha","showLegend","legendCaption","legendCaptionBold","legendItemFontBold","legendItemFontSize","anchorRadius","anchorBorderThickness","anchorBgColor","anchorBorderColor","addRemove","staicChartOptions","colorObj","defaults","stringify","valuePosition","labelPosition","captionFont","captionFontSize","subcaptionFont","subcaptionFontSize","xAxisNameFont","xAxisNameFontSize","xAxisValueFontColor","xAxisMinValue","xAxisMaxValue","xAxisPosition","yAxisNameFont","yAxisNameFontSize","yAxisPosition","yAxisValueFontColor","valueFontSize","labelFontSize","labelFont","labelDisplay","legendItemFont","legendCaptionFontSize","setDefaults","setEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\r\n\r\n  export function formatChartType_MultiSeries_Stacked_Column2D_Line_Dual_Y_Axis(props: any): { categories: any, dataset: any, lineset: any } {\r\n    let categories: any = new Array();\r\n    let dataset: any = new Array();\r\n    let lineset: any = new Array();\r\n    let category: any = new Array();\r\n    let data: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n      let labelFlag: boolean = false;\r\n      let array = props.data.series[0].fields;\r\n      let counter = 0;\r\n      let size = array.length;\r\n      array.forEach((obj:any) => {\r\n        let array = obj.values.buffer;\r\n        array.forEach((val:any) => {\r\n          /*First element of the array are lables operating using labelFlag*/\r\n          if (!labelFlag) {\r\n            category.push({ \"label\": val, })\r\n          }\r\n          else {\r\n            data.push({ \"value\": val })\r\n          }\r\n        })\r\n        if (labelFlag) {\r\n          // when Counter value 0 label are fetched , when Counter value 1 column values are fetched         \r\n          if (counter === size) {\r\n            lineset.push({ \"seriesname\": obj.name, \"data\": data })\r\n          }\r\n          else {\r\n            dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n          }\r\n        }\r\n        labelFlag = true;\r\n        counter++;\r\n        data = new Array();\r\n      });\r\n      categories.push({ \"category\": category });\r\n    }\r\n    return { categories: categories, dataset: dataset, lineset: lineset };\r\n  }\r\n\r\n  export function formatChartType_Multi_Series_Stacked_Column_Single_Dual_Y_Axis(props: any): { categories: any, dataset: any, lineset: any } {\r\n\r\n    let categories: any = new Array();\r\n    let dataset: any = new Array();\r\n    let category: any = new Array();\r\n    let data: any = new Array();\r\n    let lineset: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n      let labelFlag: boolean = false;\r\n      let array = props.data.series[0].fields;\r\n      let counter = 0;\r\n      array.forEach((obj:any) => {\r\n        let array = obj.values.buffer;\r\n        array.forEach((val:any) => {\r\n          /*First element of the array are lables operating using labelFlag*/\r\n          if (!labelFlag) {\r\n            category.push({ \"label\": val, })\r\n          }\r\n          else {\r\n            data.push({ \"value\": val })\r\n          }\r\n        })\r\n        if (labelFlag) {\r\n          // when Counter value 0 label are fetched , when Counter value 1 column values are fetched         \r\n          if (counter === 3) {\r\n            // For Dual Y-Axis\r\n            if (props.options.charttype === 'stackedcolumn2dlinedy' || props.options.charttype === 'stackedcolumn3dlinedy'\r\n              || props.options.charttype === 'mscolumn3dlinedy') {\r\n              dataset.push({ \"seriesname\": obj.name, \"renderAs\": \"line\", \"parentyaxis\": \"S\", \"data\": data })\r\n            }\r\n            else // For single Y-Axis\r\n            {\r\n              dataset.push({ \"seriesname\": obj.name, \"renderAs\": \"line\", \"data\": data })\r\n            }\r\n          }\r\n          else {\r\n            dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n          }\r\n        }\r\n        labelFlag = true;\r\n        counter++;\r\n        data = new Array();\r\n      });\r\n      categories.push({ \"category\": category });\r\n    }\r\n    return { categories: categories, dataset: dataset, lineset: lineset };\r\n\r\n  }\r\n\r\n  export function format_StackedArea_Line_Dual_Y_Axis(props: any) {\r\n    let categories: any = new Array();\r\n    let dataset: any = new Array();\r\n    let category: any = new Array();\r\n    let data: any = new Array();\r\n    let lineset: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n      let labelFlag: boolean = false;\r\n      let array = props.data.series[0].fields;\r\n      let counter = 0;\r\n      let size = array.length;\r\n      array.forEach((obj:any) => {\r\n        let array = obj.values.buffer;\r\n        array.forEach((val:any) => {\r\n          /*First element of the array are lables operating using labelFlag*/\r\n          if (!labelFlag) {\r\n            category.push({ \"label\": val, })\r\n          }\r\n          else {\r\n            data.push({ \"value\": val })\r\n          }\r\n        })\r\n        if (labelFlag) {\r\n          // when Counter value 0 label are fetched , when Counter value 1 column values are fetched         \r\n          if (counter === size) {\r\n\r\n            dataset.push({ \"seriesname\": obj.name, \"renderAs\": \"line\", \"showanchors\": \"1\", \"parentYAxis\": \"S\", \"data\": data })\r\n\r\n          }\r\n          else {\r\n            dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n          }\r\n        }\r\n        labelFlag = true;\r\n        counter++;\r\n        data = new Array();\r\n      });\r\n      categories.push({ \"category\": category });\r\n    }\r\n    return { categories: categories, dataset: dataset, lineset: lineset };\r\n  }\r\n\r\n  export function formatChartType_Multi_Series_Column_Line_Area_Single_Dual_Y_Axis(props: any): { categories: any, dataset: any, lineset: any } {\r\n    let categories: any = new Array();\r\n    let dataset: any = new Array();\r\n    let category: any = new Array();\r\n    let lineset: any = new Array();\r\n    let data: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n      let labelFlag: boolean = false;\r\n      let array = props.data.series[0].fields;\r\n      let counter = 0;\r\n      array.forEach((obj:any) => {\r\n        let array = obj.values.buffer;\r\n        array.forEach((val:any) => {\r\n          /*First element of the array are lables operating using labelFlag*/\r\n          if (!labelFlag) {\r\n            category.push({ \"label\": val, })\r\n          }\r\n          else {\r\n            data.push({ \"value\": val })\r\n          }\r\n        })\r\n        if (labelFlag) {\r\n          // when Counter value 0 label are fetched , when Counter value 1 column values are fetched\r\n          if (counter === 2) {\r\n            if (props.options.charttype === 'mscombidy2d' || props.options.charttype === 'mscombidy3d') {\r\n              dataset.push({ \"seriesname\": obj.name, \"renderAs\": \"line\", \"parentyaxis\": \"S\", \"data\": data })\r\n            }\r\n            else // For single Y-Axis\r\n            {\r\n              dataset.push({ \"seriesname\": obj.name, \"renderAs\": \"line\", \"data\": data })\r\n            }\r\n          }\r\n          else if (counter === 3) {\r\n            dataset.push({ \"seriesname\": obj.name, \"renderAs\": \"area\", \"data\": data })\r\n          }\r\n          else {\r\n            dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n          }\r\n        }\r\n        labelFlag = true;\r\n        counter++;\r\n        data = new Array();\r\n      });\r\n      categories.push({ \"category\": category });\r\n    }\r\n    return { categories: categories, dataset: dataset, lineset: lineset };\r\n\r\n  }","import { ChartOptions } from 'ChartOptions';\r\n\r\nimport { formatMultiSeriesChartType } from './MultiSeriesParser';\r\nimport { formatAnguarGuage } from './WidgetChartsParser';\r\nimport { formatChartType_Multi_Series_Column_Line_Area_Single_Dual_Y_Axis, formatChartType_Multi_Series_Stacked_Column_Single_Dual_Y_Axis, format_StackedArea_Line_Dual_Y_Axis, formatChartType_MultiSeries_Stacked_Column2D_Line_Dual_Y_Axis } from 'CombinationSeriesParser';\r\n\r\nlet charts: Array<string> = ['scrollcolumn2d', 'scrollbar2d', 'scrollline2d', 'scrollarea2d'];\r\nlet multiseries: Array<string> = ['mscolumn2d', 'mscolumn3d', 'msbar2d', 'msbar3d', 'msline', 'msarea', 'marimekko', 'overlappedcolumn2d',\r\n    'overlappedbar2d', 'zoomline', 'zoomlinedy', 'stackedcolumn2d', 'stackedcolumn3d', 'stackedbar2d', 'scrollStackedBar2D',\r\n    'stackedbar3d', 'stackedarea2d', 'radar'];\r\n\r\nlet ColumnLineAreaSDAxis: Array<string> = ['mscombi2d', 'mscombi3d', 'mscombidy2d', 'mscombidy3d'];\r\nlet MSStackedColumnSingleDualAxis: Array<string> = ['stackedcolumn2dlinedy', 'stackedcolumn3dlinedy',\r\n    'mscolumnline3d', 'stackedcolumn2dline',\r\n    'stackedcolumn3dline', 'mscolumn3dlinedy'];\r\nlet StackedAreaLine2D: string = 'stackedarea2dlinedy';\r\nlet MSStackedColumn2DDual: string = 'msstackedcolumn2dlinedy';\r\nlet msScrollList:Array<string> =['scrollcombi2d','scrollcombidy2d'];\r\n\r\nexport function fetchChartData(data: any, options: ChartOptions,props:any) {\r\n  const chartType = options.charttype;\r\n  //if (this.props.options.charttype === 'zoomline' || this.props.options.charttype === 'zoomlinedy') {\r\n    //data = formatZoomlineTypeChart(this.props);\r\n    //}else \r\n  if (ColumnLineAreaSDAxis.includes(chartType)) {\r\n    data = formatChartType_Multi_Series_Column_Line_Area_Single_Dual_Y_Axis(props);\r\n  }\r\n  else if (MSStackedColumnSingleDualAxis.includes(chartType)) {\r\n    data = formatChartType_Multi_Series_Stacked_Column_Single_Dual_Y_Axis(props);\r\n  }\r\n  else if (chartType === StackedAreaLine2D) {\r\n    data = format_StackedArea_Line_Dual_Y_Axis(props);\r\n  }\r\n  else if (chartType === MSStackedColumn2DDual) {\r\n    data = formatChartType_MultiSeries_Stacked_Column2D_Line_Dual_Y_Axis(props);\r\n  }\r\n  else if (msScrollList.includes(chartType)) {\r\n    data = formatChartType_Multi_Series_Stacked_Column_Single_Dual_Y_Axis(props);\r\n  }\r\n  else if (charts.includes(chartType)) {\r\n    data = formatScrollCharts(props);\r\n  }\r\n  else if (multiseries.includes(chartType)) {\r\n    data = formatMultiSeriesChartType(props);\r\n  }else if(chartType === 'angulargauge'){\r\n    data = formatAnguarGuage(props);\r\n  }else if(chartType === 'dragnode'){\r\n    data = props.options.data;\r\n  }\r\n  else {\r\n    data = formatNonScrollCharts(props);\r\n  }\r\n  return data;\r\n}\r\n\r\nexport function dynamicProps(options: ChartOptions, theme: any, data: any, rootID:any) {\r\n  if (options.charttype == 'bar2d' || options.charttype == 'bar3d') {\r\n    return {\r\n      type: options.charttype,\r\n      renderAt: rootID,\r\n      dataFormat: 'json',\r\n      containerBackgroundOpacity: '0',\r\n      dataEmptyMessage: 'Retreving data and changing chart propertes.. please wait..',\r\n      dataLoadStartMessage: \"Please wait, chart is loading the data....\",\r\n      dataLoadStartMessageFontSize: \"14\",\r\n      dataSource: {\r\n        // Chart Configuration\r\n        chart: {\r\n          bgColor: theme.colors.bg1,\r\n          canvasbgColor:  theme.colors.bg1,\r\n          valueFontColor : theme.colors.text,\r\n          labelFontColor: theme.isDark ? theme.palette.white : theme.palette.dark1,\r\n          legendItemFontColor: theme.isDark ? theme.palette.white :theme.palette.dark1,\r\n          xAxisFontColor:theme.palette.dark1,\r\n          valueBgColor: (theme.isDark && options.charttype === 'marimekko') ? theme.palette.dark1 : '',\r\n          radarfillcolor:(theme.isDark && options.charttype === 'radar') ? theme.palette.dark1 : '',\r\n          ...options\r\n        },\r\n        // Chart Data\r\n        \"data\": data.data\r\n      }\r\n    };\r\n  } else if(options.charttype == 'msstackedcolumn2dlinedy'){\r\n    return {\r\n      type: options.charttype,\r\n      renderAt: rootID,\r\n      dataFormat: 'json',\r\n      containerBackgroundOpacity: '0',\r\n      dataEmptyMessage: 'Retreving data and changing chart propertes.. please wait..',\r\n      dataLoadStartMessage: \"Please wait, chart is loading the data....\",\r\n      dataLoadStartMessageFontSize: \"14\",\r\n      dataSource: {\r\n        // Chart Configuration\r\n        chart: {\r\n          bgColor: theme.colors.bg1,\r\n          canvasbgColor:  theme.colors.bg1,\r\n          valueFontColor : theme.colors.text,\r\n          labelFontColor: theme.isDark ? theme.palette.white : theme.palette.dark1,\r\n          legendItemFontColor: theme.isDark ? theme.palette.white :theme.palette.dark1,\r\n          xAxisFontColor:theme.palette.dark1,\r\n          valueBgColor: (theme.isDark && options.charttype === 'marimekko') ? theme.palette.dark1 : '',\r\n          radarfillcolor:(theme.isDark && options.charttype === 'radar') ? theme.palette.dark1 : '',\r\n          ...options\r\n        },\r\n        // Chart Data\r\n        \"dataset\": data.dataset,\r\n        \"categories\": data.categories,\r\n        \"lineset\": data.lineset\r\n      }\r\n    };\r\n  }else if(options.charttype == 'angulargauge'){\r\n    return {\r\n      type: options.charttype,\r\n      renderAt: rootID,\r\n      dataFormat: 'json',\r\n      containerBackgroundOpacity: '0',\r\n      dataEmptyMessage: 'Retreving data and changing chart propertes.. please wait..',\r\n      dataLoadStartMessage: \"Please wait, chart is loading the data....\",\r\n      dataLoadStartMessageFontSize: \"14\",\r\n      dataSource: {\r\n        // Chart Configuration\r\n        chart: {\r\n          bgColor: theme.colors.bg1,\r\n          canvasbgColor:  theme.colors.bg1,\r\n          valueFontColor : theme.colors.text,\r\n          labelFontColor: theme.isDark ? theme.palette.white : theme.palette.dark1,\r\n          legendItemFontColor: theme.isDark ? theme.palette.white :theme.palette.dark1,\r\n          xAxisFontColor:theme.palette.dark1,\r\n          valueBgColor: (theme.isDark && options.charttype === 'marimekko') ? theme.palette.dark1 : '',\r\n          radarfillcolor:(theme.isDark && options.charttype === 'radar') ? theme.palette.dark1 : '',\r\n          ...options\r\n        },\r\n        ...data,\r\n        \"dials\": data.dials\r\n      }\r\n    };\r\n  }else if(options.charttype === 'dragnode'){\r\n    return {\r\n      type: options.charttype,\r\n      renderAt: rootID,\r\n      dataFormat: 'json',\r\n      containerBackgroundOpacity: '0',\r\n      dataEmptyMessage: 'Retreving data and changing chart propertes.. please wait..',\r\n      dataLoadStartMessage: \"Please wait, chart is loading the data....\",\r\n      dataLoadStartMessageFontSize: \"14\",\r\n      dataSource: {\r\n        // Chart Configuration\r\n        chart: {\r\n          bgColor: theme.colors.bg1,\r\n          canvasbgColor:  theme.colors.bg1,\r\n          valueFontColor : theme.colors.text,\r\n          labelFontColor: theme.isDark ? theme.palette.white : theme.palette.dark1,\r\n          legendItemFontColor: theme.isDark ? theme.palette.white :theme.palette.dark1,\r\n          xAxisFontColor:theme.palette.dark1,\r\n          valueBgColor: (theme.isDark && options.charttype === 'marimekko') ? theme.palette.dark1 : '',\r\n          radarfillcolor:(theme.isDark && options.charttype === 'radar') ? theme.palette.dark1 : '',\r\n          ...options\r\n        },\r\n        ...data\r\n      }\r\n    };\r\n  }\r\n  else {\r\n    return {\r\n      type: options.charttype,\r\n      renderAt: rootID,\r\n      dataFormat: 'json',\r\n      containerBackgroundOpacity: '0',\r\n      dataEmptyMessage: 'Retreving data and changing chart propertes.. please wait..',\r\n      dataLoadStartMessage: \"Please wait, chart is loading the data....\",\r\n      dataLoadStartMessageFontSize: \"14\",\r\n      dataSource: {\r\n        // Chart Configuration\r\n        chart: {\r\n          bgColor: theme.colors.bg1,\r\n          canvasbgColor:  theme.colors.bg1,\r\n          valueFontColor : theme.colors.text,\r\n          labelFontColor: theme.isDark ? theme.palette.white : theme.palette.dark1,\r\n          legendItemFontColor: theme.isDark ? theme.palette.white :theme.palette.dark1,\r\n          xAxisFontColor:theme.palette.dark1,\r\n          valueBgColor: (theme.isDark && options.charttype === 'marimekko') ? theme.palette.dark1 : '',\r\n          radarfillcolor:(theme.isDark && options.charttype === 'radar') ? theme.palette.dark1 : '',\r\n          ...options\r\n        },\r\n        // Chart Data\r\n        \"data\": data.data,\r\n        \"dataset\": data.dataset,\r\n        \"categories\": data.categories,\r\n        \"lineset\": data.lineset,\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This method helps in parsing Neo4j response to fusion single series Non scroll charts\r\n * @param props\r\n */\r\nexport function formatNonScrollCharts(props: any) {\r\n  let data: any = new Array();\r\n  if (props.data.state === 'Done') {\r\n    let array = props.data.series[0].fields;\r\n    let labels = array[0].values.buffer;\r\n    let index = 0;\r\n    let values = array[1].values.buffer;\r\n    labels.forEach((obj: any) => {\r\n      data.push({ \"label\": obj, \"value\": values[index] })\r\n      index++;\r\n    });\r\n  }\r\n  return { data: data }\r\n}\r\n\r\n/**\r\n * This method helps in parsing Neo4j response to fusion single series scroll charts\r\n * @param props\r\n */\r\nexport function formatScrollCharts(props: any) {\r\n  let categories: any = new Array();\r\n  let dataset: any = new Array();\r\n  let category: any = new Array();\r\n  let data: any = undefined;\r\n  if (props.data.state === 'Done') {\r\n    let labelFlag: boolean = false;\r\n    let array = props.data.series[0].fields;\r\n    array.forEach((obj: any) => {\r\n      let array = obj.values.buffer;\r\n      array.forEach((val: any) => {\r\n        /*First element of the array are lables operating using labelFlag*/\r\n        if (!labelFlag) {\r\n          category.push({ \"label\": val, })\r\n        }\r\n        else {\r\n          data.push({ \"value\": val })\r\n        }\r\n      })\r\n      if (labelFlag) {\r\n        dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n      }\r\n      labelFlag = true;\r\n      data = new Array();\r\n    });\r\n    categories.push({ \"category\": category });\r\n  }\r\n  return { data: data, categories: categories, dataset: dataset };\r\n}\r\n\r\n","import React from 'react';\r\nimport { PanelProps } from '@grafana/data';\r\nimport { ChartOptions } from './ChartOptions';\r\nimport { css, cx } from 'emotion';\r\nimport { config } from '@grafana/runtime';\r\n\r\nimport { dynamicProps, fetchChartData } from './SingleSeriesParser';\r\n\r\ninterface Props extends PanelProps<ChartOptions> { }\r\n\r\nlet rootID: string | undefined;\r\n\r\nexport class FusionPanel extends React.Component<Props>{\r\n\r\n  render() {\r\n    const { options } = this.props;\r\n    rootID = 'insights-fusion-' + this.props.id;\r\n    let data: any;\r\n    //console.log('ChartType---', options.charttype);\r\n    data = fetchChartData(data, options,this.props);\r\n    return (\r\n      <div id={rootID} style={{ height: '100%' }} className={cx(`position:relative`, css`width: ${this.props.width}px;height: ${this.props.height}px;`)}>\r\n        {this.processChartAfterScriptLoad(data)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  processChartAfterScriptLoad(data: any): React.ReactNode {\r\n    let FusionCharts = (window as any).FusionCharts;\r\n    const { theme } = config;\r\n    const { options } = this.props;\r\n    const chartConfig = dynamicProps(options, theme, data, rootID);\r\n    FusionCharts.ready(function () {\r\n      var fusioncharts = new FusionCharts(chartConfig);\r\n      fusioncharts.resizeTo('100%', '100%');\r\n      fusioncharts.render();\r\n    });\r\n\r\n    return <div id={rootID} style={{ height: '100%' }} className={cx(`position:relative`, css`width: ${this.props.width}px;height: ${this.props.height}px;`)}></div>;\r\n  }\r\n};\r\n\r\n\r\n","export function formatMultiSeriesChartType(props: any): { categories: any, dataset: any } {\r\n    let categories: any = new Array();\r\n    let dataset: any = new Array();\r\n    let category: any = new Array();\r\n    let data: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n        let labelFlag: boolean = false;\r\n        let array = props.data.series[0].fields;\r\n        array.forEach((obj: any) => {\r\n            let array = obj.values.buffer;\r\n            array.forEach((val: any) => {\r\n                /*First element of the array are lables operating using labelFlag*/\r\n                if (!labelFlag) {\r\n                    category.push({ \"label\": val })\r\n                }\r\n                else {\r\n                    data.push({ \"value\": val })\r\n                }\r\n            })\r\n            if (labelFlag) {\r\n                dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n            }\r\n            labelFlag = true;\r\n            data = new Array();\r\n        });\r\n        categories.push({ \"category\": category });\r\n    }\r\n    return { categories: categories, dataset: dataset };\r\n\r\n}\r\n\r\nexport function formatZoomlineTypeChart(props: any): { categories: any, dataset: any } {\r\n    // this.state = { categories: [], dataset: [] };\r\n    let categories: any = new Array();\r\n    let dataset: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n        let labelFlag: boolean = false;\r\n        let array = props.data.series[0].fields;\r\n        let data: any = ''\r\n        let category: any = ''\r\n        array.forEach((obj: any) => {\r\n            let array = obj.values.buffer;\r\n            array.forEach((val: any) => {\r\n                /*First element of the array are lables operating using labelFlag*/\r\n                if (!labelFlag) {\r\n                    category = val + '|' + category;\r\n                }\r\n                else {\r\n                    data = val + '|' + data;\r\n                }\r\n            })\r\n            if (labelFlag) {\r\n                dataset.push({ \"seriesname\": obj.name, \"data\": data })\r\n            }\r\n            labelFlag = true;\r\n            data = new Array();\r\n        });\r\n        categories.push({ \"category\": category });\r\n    }\r\n    return { categories: categories, dataset: dataset }\r\n}","export function formatAnguarGuage(props: any) {\r\n    let dials: any = new Object();\r\n    let dial: any = new Array();\r\n    if (props.data.state === 'Done') {\r\n      let array = props.data.series[0].fields;\r\n      let labels = array[0].values.buffer;\r\n      let index = 0;\r\n      let values = array[1].values.buffer;\r\n      labels.forEach((obj:any) => {\r\n        dial.push({ \"value\": values[index] })\r\n        index++;\r\n      });\r\n      dials[\"dial\"] = dial;\r\n    }\r\n    return { dials: dials }\r\n\r\n  }","import React, { useState, FC, useEffect } from 'react';\r\nimport { css, cx } from 'emotion';\r\nimport { GrafanaTheme } from '@grafana/data';\r\nimport { useTheme, Icon, stylesFactory } from '@grafana/ui';\r\n\r\ninterface Props {\r\n  title?: React.ReactNode;\r\n  renderTitle?: (isExpanded: boolean) => React.ReactNode;\r\n  defaultToClosed?: boolean;\r\n  className?: string;\r\n  nested?: boolean;\r\n  onToggle?: (isExpanded: boolean) => void;\r\n}\r\n\r\nconst OptionsGroup: FC<Props> = ({\r\n  title,\r\n  children,\r\n  defaultToClosed,\r\n  renderTitle,\r\n  className,\r\n  nested = false,\r\n  onToggle,\r\n}) => {\r\n  const [isExpanded, toggleExpand] = useState(defaultToClosed ? false : true);\r\n  const theme = useTheme();\r\n  const styles = getStyles(theme, isExpanded, nested);\r\n  useEffect(() => {\r\n    if (onToggle) {\r\n      onToggle(isExpanded);\r\n    }\r\n  }, [isExpanded]);\r\n\r\n  return (\r\n    <div className={cx(styles.box, className, 'options-group')}>\r\n      <div className={styles.header} onClick={() => toggleExpand(!isExpanded)}>\r\n        <div className={cx(styles.toggle, 'editor-options-group-toggle')}>\r\n          <Icon name={isExpanded ? 'angle-down' : 'angle-right'} />\r\n        </div>\r\n        <div style={{ width: '100%' }}>{renderTitle ? renderTitle(isExpanded) : title}</div>\r\n      </div>\r\n      {isExpanded && <div className={styles.body}>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getStyles = stylesFactory((theme: GrafanaTheme, isExpanded: boolean, isNested: boolean) => {\r\n  return {\r\n    box: cx(\r\n      !isNested &&\r\n        css`\r\n          border-bottom: 1px solid ${theme.colors.pageHeaderBorder};\r\n        `,\r\n      isNested &&\r\n        isExpanded &&\r\n        css`\r\n          margin-bottom: ${theme.spacing.formSpacingBase * 2}px;\r\n        `\r\n    ),\r\n    toggle: css`\r\n      color: ${theme.colors.textWeak};\r\n      font-size: ${theme.typography.size.lg};\r\n      margin-right: ${theme.spacing.sm};\r\n    `,\r\n    header: cx(\r\n      css`\r\n        display: flex;\r\n        cursor: pointer;\r\n        align-items: baseline;\r\n        padding: ${theme.spacing.sm} ${theme.spacing.md} ${theme.spacing.sm} ${theme.spacing.sm};\r\n        color: ${isExpanded ? theme.colors.text : theme.colors.formLabel};\r\n        font-weight: ${theme.typography.weight.semibold};\r\n\r\n        &:hover {\r\n          color: ${theme.colors.text};\r\n\r\n          .editor-options-group-toggle {\r\n            color: ${theme.colors.text};\r\n          }\r\n        }\r\n      `,\r\n      isNested &&\r\n        css`\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n          padding-top: 0;\r\n        `\r\n    ),\r\n    body: cx(\r\n      css`\r\n        padding: 0 ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.xl};\r\n      `,\r\n      isNested &&\r\n        css`\r\n          position: relative;\r\n          padding-right: 0;\r\n          &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 8px;\r\n            width: 1px;\r\n            height: 100%;\r\n            background: ${theme.colors.pageHeaderBorder};\r\n          }\r\n        `\r\n    ),\r\n  };\r\n});\r\n\r\nexport default OptionsGroup;","import { SelectableValue } from '@grafana/data';\r\n\r\ntype SeriesSize = 'sm' | 'md' | 'lg';\r\n\r\nexport interface SimpleOptions {\r\n  text: string;\r\n  charttype: string;\r\n  showSeriesCount: boolean;\r\n  seriesCountSize: SeriesSize;\r\n}\r\n\r\nexport let chartTypes: Array<SelectableValue> = [\r\n  { value: 'column2d', label: 'Column 2D' },\r\n  { value: 'scrollcolumn2d', label: 'Scroll Column 2D' },\r\n  { value: 'column3d', label: 'Column 3D' },\r\n  { value: 'bar2d', label: 'Bar 2D' },\r\n  { value: 'scrollbar2d', label: 'Scroll Bar 2D' },\r\n  { value: 'bar3d', label: 'Bar 3D' },\r\n  { value: 'line', label: 'Line 2D' },\r\n  { value: 'scrollline2d', label: 'Scroll Line 2D' },\r\n  { value: 'area2d', label: 'Area 2D' },\r\n  { value: 'scrollarea2d', label: 'Scroll Area 2D' },\r\n  { value: 'pie2d', label: 'Pie 2D' },\r\n  { value: 'pie3d', label: 'Pie 3D' },\r\n  { value: 'doughnut2d', label: ' Doughnut 2D' },\r\n  { value: 'doughnut3d', label: 'Doughnut 3D' },\r\n  { value: 'pareto2d', label: 'Pareto 2D' },\r\n  { value: 'pareto3d', label: 'Pareto 3D' },\r\n  { value: 'waterfall2d', label: 'Waterfall' },\r\n];\r\nexport let scrollCharts: Array<string> = [\r\n  'scrollcolumn2d',\r\n  'scrollbar2d',\r\n  'scrollline2d',\r\n  'scrollarea2d'\r\n]\r\n\r\nexport let pieAndDoughnutCharts: Array<string> = [\r\n  'pie2d',\r\n  'pie3d',\r\n  'doughnut2d',\r\n  'doughnut3d'\r\n]\r\n\r\n\r\nexport let fontFamily: Array<SelectableValue> = [\r\n  { value: 'Roboto,Helvetica Neue,Arial,sans-serif', label: 'Default' },\r\n  { value: 'Arial', label: 'Arial' },\r\n  { value: 'Roboto', label: 'Roboto' },\r\n  { value: 'Helvetica Neue', label: 'Helvetica Neue' },\r\n  { value: 'sans-serif', label: 'sans-serif' },\r\n  { value: 'Montserrat', label: 'Montserrat' },\r\n  { value: 'Open Sans', label: 'Open Sans' },\r\n  { value: 'Lato', label: 'Lato' },\r\n  { value: 'Tahoma', label: 'Tahoma' },\r\n]\r\n\r\nexport let FontSizes: Array<SelectableValue> = [\r\n\r\n  { value: '5', label: '5' },\r\n  { value: '7', label: '7' },\r\n  { value: '8', label: '8' },\r\n  { value: '9', label: '9' },\r\n  { value: '10', label: '10' },\r\n  { value: '11', label: '11' },\r\n  { value: '12', label: '12' },\r\n  { value: '13', label: '13' },\r\n  { value: '15', label: '15' },\r\n  { value: '17', label: '17' },\r\n  { value: '19', label: '19' },\r\n  { value: '21', label: '21' },\r\n  { value: '23', label: '23' },\r\n  { value: '25', label: '25' },\r\n  { value: '27', label: '27' },\r\n  { value: '28', label: '28' },\r\n  { value: '29', label: '29' },\r\n  { value: '30', label: '30' },\r\n];\r\n\r\nexport let captionAlignment: Array<SelectableValue> = [\r\n  { value: 'center', label: 'Center' },\r\n  { value: 'left', label: 'Left' },\r\n  { value: 'right', label: 'Right' },\r\n\r\n];\r\n\r\nexport let axisPositions: Array<SelectableValue> = [\r\n  { value: 'right', label: 'Right' },\r\n  { value: 'left', label: 'Left' },\r\n  { value: 'top', label: 'Top' },\r\n  { value: 'bottom', label: 'Bottom' },\r\n];\r\n\r\nexport let themes: Array<SelectableValue> = [\r\n  { value: 'fusion', label: 'Fusion' },\r\n  { value: 'gammel', label: 'Gammel' },\r\n  { value: 'candy', label: 'candy' },\r\n  { value: 'zune', label: 'Zune' },\r\n  { value: 'ocean', label: 'Ocean' },\r\n  { value: 'carbon', label: 'Carbon' }\r\n];\r\n\r\nexport let rotateValues: Array<SelectableValue> = [\r\n  { value: '0', label: 'Horizantal' },\r\n  { value: '1', label: 'Vertical' }\r\n];\r\n\r\nexport let labels: Array<SelectableValue> = [\r\n  { value: 'Auto', label: 'Auto' },\r\n  { value: 'Slant', label: 'Slant' },\r\n  { value: 'Rotate', label: 'Rotate' },\r\n  { value: 'Stagger', label: 'Stagger' }\r\n];\r\n\r\nexport let valuePositions: Array<SelectableValue> = [\r\n  { value: 'inside', label: 'Inside' },\r\n  { value: 'outside', label: 'Outside' }\r\n];\r\n\r\n/**MultiSereis */\r\n\r\nexport let multiSeries: Array<SelectableValue> = [\r\n  { value: 'mscolumn2d', label: 'Column 2D' },\r\n  { value: 'mscolumn3d', label: 'Column 3D' },\r\n  { value: 'msbar2d', label: 'Bar 2D' },\r\n  { value: 'msbar3d', label: 'Bar 3D' },\r\n  { value: 'msline', label: 'Line 2D' },\r\n  { value: 'msarea', label: 'Area 2D' },\r\n  { value: 'marimekko', label: 'Marimekko' },\r\n  { value: 'overlappedcolumn2d', label: 'Overlapped Column 2D' },\r\n  { value: 'overlappedbar2d', label: 'Overlapped Bar 2D' },\r\n  { value: 'zoomline', label: 'Zoom Line' },\r\n  { value: 'zoomlinedy', label: 'Zoom Line DY' },\r\n  { value: 'stackedcolumn2d', label: 'Stacked Column 2D' },\r\n  { value: 'stackedcolumn3d', label: 'Stacked Column 3D' },\r\n  { value: 'stackedbar2d', label: 'Stacked Bar 2D' },\r\n  { value: 'scrollStackedBar2D', label: 'Scroll Stacked Bar 2D' },\r\n  { value: 'stackedbar3d', label: 'Stacked Bar 3D' },\r\n  { value: 'stackedarea2d', label: 'Stacked Area 2D' },\r\n  { value: 'radar', label: 'Radar' },\r\n\r\n]\r\n\r\nexport let multiSeriesChats = [\r\n   'mscolumn2d',\r\n   'mscolumn3d', \r\n   'msbar2d', \r\n   'msbar3d', \r\n   'msline',\r\n   'msarea',\r\n   'marimekko', \r\n   'overlappedcolumn2d',\r\n   'overlappedbar2d', \r\n   'zoomline', \r\n   'zoomlinedy', \r\n   'stackedcolumn2d',\r\n   'stackedcolumn3d', \r\n   'stackedbar2d', \r\n   'scrollStackedBar2D',\r\n   'stackedbar3d',\r\n   'stackedarea2d', \r\n   'radar'\r\n\r\n];\r\n\r\n\r\n//COmbination charts\r\nexport let combinationCharts: Array<SelectableValue> = [\r\n  { value: 'mscombi2d', label: 'Multi-2D SingleY(Column+Line+Area)' },\r\n  { value: 'mscombi3d', label: 'Multi-3D SingleY(Column+Line+Area)' },\r\n  { value: 'mscombidy2d', label: 'Multi-2D DualY(Column+Line+Area)' },\r\n  { value: 'mscombidy3d', label: 'Multi-3D DualY(Column+Line+Area)' },\r\n\r\n  { value: 'mscolumnline3d', label: 'Multi Column 3D+Line-SingleY' },\r\n  { value: 'mscolumn3dlinedy', label: 'Multi Column 3D+Line-DualY' },\r\n\r\n  //Scroll Combination Chart\r\n\r\n  { value: 'scrollcombi2d', label: 'Scroll Combination 2D' },\r\n  { value: 'scrollcombidy2d', label: 'Scroll Combination 2D DualY' },\r\n\r\n\r\n  { value: 'stackedarea2dlinedy', label: 'Stacked Area+Line DualY' },\r\n  { value: 'msstackedcolumn2dlinedy', label: 'Multi Stacked Column2D+Line DualY' },\r\n\r\n  { value: 'stackedcolumn2dline', label: 'Stacked Column2D+Line SingleY' },\r\n  { value: 'stackedcolumn3dline', label: 'Stacked Column3D +Line SingleY' },\r\n  { value: 'stackedcolumn2dlinedy', label: 'Stacked Column2D +Line Dual Y' },\r\n  { value: 'stackedcolumn3dlinedy', label: 'Stacked Column3D +Line Dual Y' },\r\n]\r\n\r\nexport let combinationWithLine = ['mscombi2d' ,'mscombi3d','mscombidy2d','mscombidy3d'\r\n,'mscolumnline3d' ,'mscolumn3dlinedy' ,'stackedcolumn2dline'\r\n,'stackedcolumn3dline' ,'stackedcolumn2dlinedy' ,'stackedcolumn3dlinedy'];\r\n\r\n//Widget chart\r\n\r\nexport let widgetCharts: Array<SelectableValue> = [\r\n  { value: 'angulargauge', label: 'Angular Gauge' },\r\n  { value: 'dragnode', label: 'Add Remove Node' }\r\n];","import { ChangeEvent, MouseEvent } from 'react';\r\n\r\nimport { pieAndDoughnutCharts, scrollCharts } from './types';\r\n\r\nexport function onChanged(field: string, event: any, props:any){\r\n    let obj = { [field]: event.target.value }\r\n    props.onOptionsChange({ ...props.options, ...obj });\r\n};\r\n\r\nexport function onValueChanged(key: any, value: any, props:any): void {\r\n    let obj = { [key]: value }\r\n    props.onOptionsChange({ ...props.options, ...obj })\r\n  }\r\n\r\nexport function onSwitched(key:any, value: any,props:any): void {\r\n    props.onOptionsChange({ ...props.options, [key]: !props.options[key] });\r\n}\r\n\r\n/**\r\n * Change Chart type based on chart attribute.\r\n */\r\nexport function onChartTypeChanged({ value }: any, props:any) {\r\n    if (value === 'pareto2d' || value === 'pareto3d') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isParetoChart': true, 'isPieOrDoughnutChart': false, 'isBarAndColumnChart': false, 'isScrollCombi2D': false, 'isWaterfallChart': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else if (pieAndDoughnutCharts.includes(value)) {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isParetoChart': false, 'isPieOrDoughnutChart': true, 'isBarAndColumnChart': false, 'isScrollCombi2D': false, 'isLineChart': false, 'isWaterfallChart': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else if (scrollCharts.includes(value)) {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isParetoChart': false, 'isPieOrDoughnutChart': false, 'isBarAndColumnChart': true, 'isScrollCombi2D': true, 'isLineChart': false, 'isWaterfallChart': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'line') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isParetoChart': false, 'isPieOrDoughnutChart': false, 'isBarAndColumnChart': true, 'isScrollCombi2D': false, 'isLineChart': true, 'isWaterfallChart': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'waterfall2d') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isParetoChart': false, 'isPieOrDoughnutChart': false, 'isBarAndColumnChart': false, 'isScrollCombi2D': false, 'isLineChart': false, 'isWaterfallChart': true, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n\r\n    else {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isParetoChart': false, 'isPieOrDoughnutChart': false, 'isBarAndColumnChart': true, 'isScrollCombi2D': false, 'isLineChart': false, 'isWaterfallChart': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n}\r\n\r\nexport function onTextChange(event: ChangeEvent<HTMLTextAreaElement>,props:any) {\r\n    if (event.target.value == \"\") {\r\n        props.onOptionsChange({ ...props.options, 'atext': event.target.value, 'btnEnabled': true })\r\n    }\r\n    else {\r\n        props.onOptionsChange({ ...props.options, 'atext': event.target.value, 'btnEnabled': false })\r\n    }\r\n}\r\n\r\nexport function onClick(event: MouseEvent<HTMLButtonElement>,props:any) {\r\n    let advanceChartOptions = JSON.parse(props.options.atext)\r\n    let chartOptions = props.options;\r\n    let dynamicProps = props.options.dynamicProps;\r\n    for (let key in advanceChartOptions) {\r\n\r\n        /* this condition ensures the property is part of chart options and is empty */\r\n\r\n        if (chartOptions[key] != undefined && chartOptions[key] === \"\") {\r\n            chartOptions[key] = advanceChartOptions[key];\r\n            props.onOptionsChange({ ...chartOptions })\r\n        }\r\n        else {\r\n            /*Check advance property is not part of dyanamic props  and also chartoptions which indicates \r\n            its new property and neeeds to be added in dynamicProps */\r\n\r\n            // It's new property                                                 //its old property but part of dyanamic\r\n            if ((!dynamicProps.hasOwnProperty(key) && !chartOptions.hasOwnProperty(key)) || dynamicProps.hasOwnProperty(key)) {\r\n                dynamicProps[key] = advanceChartOptions[key];\r\n            }\r\n            //Delete properties \r\n            for (let dkey in dynamicProps) {\r\n                if (!advanceChartOptions.hasOwnProperty(dkey)) {\r\n                    // Delete it from  dyanamic Props\r\n                    delete dynamicProps[dkey];\r\n                    // delete it from chart options too as through dyamanic props it gets added to chart options as well\r\n                    delete chartOptions[dkey];\r\n                }\r\n            }\r\n            props.onOptionsChange({ ...chartOptions, ...dynamicProps })\r\n        }\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport { PanelEditorProps } from '@grafana/data';\r\nimport { ChartOptions } from './ChartOptions';\r\nimport { Select, InlineFormLabel, LegacyForms, ColorPicker } from '@grafana/ui';\r\n\r\nimport OptionsGroup from './OptionsGroup';\r\n\r\nimport { chartTypes, fontFamily, FontSizes, captionAlignment, axisPositions, themes, rotateValues, labels, pieAndDoughnutCharts, multiSeries, valuePositions, multiSeriesChats, combinationCharts, combinationWithLine, widgetCharts } from 'types';\r\nimport { onTextChange, onClick, onChartTypeChanged, onValueChanged, onChanged, onSwitched } from './SingleSeriesEditorUtils';\r\nimport { onGraphModeChanged } from 'MultiSeriesEditorUtils';\r\nimport { onCombinationTypeChanged } from 'CombinationSeriesEditorUtils';\r\nimport { onPropsTextChange, onPropsApplyClick, onWidgetTypeChanged } from 'WidgetEditorUtils';\r\nimport { onAddRemoveChange, onNodeClick} from 'AddRemoveEditorUtils';\r\n\r\nexport class FusionEditor extends PureComponent<PanelEditorProps<ChartOptions>> {\r\n\r\n    render() {\r\n        const { FormField, Switch } = LegacyForms;\r\n        const { options } = this.props;\r\n        return (<>\r\n            \r\n\r\n            {/*Advance View*/}\r\n            <OptionsGroup title=\"Advanced view\" key=\"Advanced view\" defaultToClosed={true}>\r\n                <div className=\"gf-form-inline\">\r\n                    <div className=\"gf-form gf-form--grow\">\r\n                        <textarea rows={11} className=\"gf-form-input width-100 max-height-400px\"\r\n                            onChange={(e) => onTextChange(e, this.props)}\r\n                            placeholder=\"{'caption':'Test Caption'}\" value={options.atext} required />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={(e) => onClick(e, this.props)} type=\"submit\" disabled={options.btnEnabled}> Apply</button>\r\n            </OptionsGroup>\r\n\r\n            <OptionsGroup title=\"Static Properties\" key=\"Static Properties\" defaultToClosed={true}>\r\n                <div className=\"gf-form-inline\">\r\n                    <div className=\"gf-form gf-form--grow\">\r\n                        <textarea rows={11} className=\"gf-form-input width-100 max-height-400px\"\r\n                            onChange={(e) => onPropsTextChange(e, this.props)}\r\n                            value={options.staticProps} required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={(e) => onPropsApplyClick(e, this.props)} type=\"submit\" disabled={options.SbtnEnabled}>Apply</button>\r\n            </OptionsGroup>\r\n\r\n            {/*Chart attributes*/}\r\n            <OptionsGroup title=\"Chart Attributes\" key=\"Chart Attributes\" defaultToClosed={true}>\r\n            <div className=\"form-field\" >Default chart Type - Single Series column 2d</div>\r\n                <div className=\"form-field\">---------------------------------------</div>\r\n                <div className=\"form-field\">Chart Selected - {options.charttype}</div>\r\n                <div className=\"form-field\">---------------------------------------</div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Single Series Chart Type</InlineFormLabel>\r\n                    <Select width={25} options={chartTypes} defaultValue={chartTypes[0]}\r\n                        onChange={(e) => onChartTypeChanged(e, this.props)}\r\n                        value={chartTypes.find(item => item.value === options.charttype)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>MultiSeries Chart Type</InlineFormLabel>\r\n                    <Select width={25} options={multiSeries} defaultValue={multiSeries[0]}\r\n                        onChange={(e) => onGraphModeChanged(e, this.props)}\r\n                        value={multiSeries.find(item => item.value === options.charttype)}></Select>\r\n\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Combination Series Chart Type</InlineFormLabel>\r\n                    <Select width={40} options={combinationCharts} defaultValue={combinationCharts[0]}\r\n                        onChange={(e) => onCombinationTypeChanged(e, this.props)}\r\n                        value={combinationCharts.find(item => item.value === options.charttype)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Widget Chart Type</InlineFormLabel>\r\n                    <Select width={20} options={widgetCharts} defaultValue={widgetCharts[0]}\r\n                        onChange={(e) => onWidgetTypeChanged(e, this.props)}\r\n                        value={widgetCharts.find(item => item.value === options.charttype)}></Select>\r\n                </div>\r\n                {options.isGauge &&\r\n                    <div className=\"form-field\">\r\n\r\n                        <FormField label=\"Major TM Number\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('majorTMNumber', e, this.props)} value={options.majorTMNumber || ''} />\r\n                        <FormField label=\"Minor TM Number\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('minorTMNumber', e, this.props)} value={options.minorTMNumber || ''} />\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Major TM Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.majorTMColor} onChange={(e) => onValueChanged('majorTMColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <FormField label=\"Major TM Alpha\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('majorTMAlpha', e, this.props)} value={options.majorTMAlpha || ''} />\r\n                        <FormField label=\"Major TM Height\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('majorTMHeight', e, this.props)} value={options.majorTMHeight || ''} />\r\n                        <FormField label=\"Major TM Thickness\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('majorTMThickness', e, this.props)} value={options.majorTMThickness || ''} />\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Minor TM Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.minorTMColor} onChange={(e) => onValueChanged('minorTMColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <FormField label=\"Minor TM Alpha\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('minorTMAlpha', e, this.props)} value={options.minorTMAlpha || ''} />\r\n                        <FormField label=\"Minor TM Height\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('minorTMHeight', e, this.props)} value={options.minorTMHeight || ''} />\r\n                        <FormField label=\"Minor TM Thickness\" labelWidth={12} inputWidth={11} type=\"text\" onChange={(e) => onChanged('minorTMThickness', e, this.props)} value={options.minorTMThickness || ''} />\r\n\r\n                    </div>\r\n\r\n                }\r\n\r\n                {options.isArea &&\r\n                    <div className=\"form-field\">\r\n                        <InlineFormLabel width={8}>Area Fill</InlineFormLabel>\r\n                        <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                            <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                <ColorPicker color={options.plotFillColor} onChange={(e) => onValueChanged('plotFillColor', e, this.props)}></ColorPicker>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {options.isDualAxis &&\r\n                    <div>\r\n                        <FormField label=\"SY-Axis Name\" labelWidth={8} inputWidth={19} type=\"text\" onChange={(e) => onChanged('syaxisname', e, this.props)} value={options.syaxisname || ''} />\r\n                        <FormField label=\"Format Number\" labelWidth={8} inputWidth={19} type=\"text\" onChange={(e) => onChanged('formatnumberscale', e, this.props)} value={options.formatnumberscale || ''} />\r\n                        <FormField label=\"SNumber Suffix\" labelWidth={8} inputWidth={19} type=\"text\" onChange={(e) => onChanged('snumbersuffix', e, this.props)} value={options.snumbersuffix || ''} />\r\n                        <FormField label=\"Plot Tool Text\" labelWidth={8} inputWidth={19} type=\"text\" onChange={(e) => onChanged('plottooltext', e, this.props)} value={options.plottooltext || ''} />\r\n                    </div>\r\n                }\r\n\r\n                {(options.isScrollCombi2D || options.isScrollCharts) &&\r\n                    <div>\r\n                        <FormField label=\"No Visible Plot\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('numVisiblePlot', e, this.props)} value={options.numVisiblePlot || ''} />\r\n                        <FormField label=\"Scroll Height\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('scrollheight', e, this.props)} value={options.scrollheight || ''} />\r\n                        <FormField label=\"Scroll Color\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('scrollColor', e, this.props)} value={options.scrollColor || ''} />\r\n                        <Switch label=\"Flat ScrollBars\" labelClass=\"width-12\" checked={options.flatScrollBars} onChange={(e) => onSwitched('flatScrollBars', e, this.props)} />\r\n                        <Switch label=\"Scroll Buttons\" labelClass=\"width-12\" checked={options.scrollShowButtons} onChange={(e) => onSwitched('scrollShowButtons', e, this.props)} />\r\n                    </div>\r\n                }\r\n                <div>\r\n                    {options.isBarAndColumnChart &&\r\n                        <div>\r\n                            <Switch label=\"Show Values Inside\" labelClass=\"width-12\" checked={options.placeValuesInside} onChange={(e) => onSwitched('placeValuesInside', e, this.props)} />\r\n                        </div>\r\n                    }\r\n                    {(options.isParetoChart || options.isLineChart || options.charttype === 'scrollline2d' ||\r\n                        combinationWithLine.includes(options.charttype)) &&\r\n                        <div>\r\n                            <Switch label=\"Show/Hide Line Value\" labelClass=\"width-12\" checked={options.showLineValues} onChange={(e) => onSwitched('showLineValues', e, this.props)} />\r\n                            <div className=\"form-field\">\r\n                                <InlineFormLabel width={12}>Line Color</InlineFormLabel>\r\n                                <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                    <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                        <ColorPicker color={options.lineColor} onChange={(e) => onValueChanged('lineColor', e, this.props)}></ColorPicker>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <FormField label=\"Line Alpha\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('lineAlpha', e, this.props)} value={options.lineAlpha || ''} />\r\n                            <FormField label=\"Line Thickness\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('lineThickness', e, this.props)} value={options.lineThickness || ''} />\r\n                            <Switch label=\"Line Dashed\" labelClass=\"width-12\" checked={options.lineDashed} onChange={(e) => onSwitched('lineDashed', e, this.props)} />\r\n                            <FormField label=\"Line Dash Len\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('lineDashLen', e, this.props)} value={options.lineDashLen || ''} />\r\n                            <FormField label=\"Line Dash Gap\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('lineDashGap', e, this.props)} value={options.lineDashGap || ''} />\r\n                        </div>\r\n                    }\r\n                    {options.isPieOrDoughnutChart &&\r\n                        <div>\r\n                            <Switch label=\"Show/Hide Per Values\" labelClass=\"width-12\" checked={options.showPercentValues} onChange={(e) => onSwitched('showPercentValues', e, this.props)} />\r\n                            <FormField label=\"Default Center Label\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('defaultCenterLabel', e, this.props)} value={options.defaultCenterLabel || ''} />\r\n                            <FormField label=\"Center Label\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('centerLabel', e, this.props)} value={options.centerLabel || ''} />\r\n                            <FormField label=\"Min Angle For Value\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('minAngleForValue', e, this.props)} value={options.minAngleForValue || ''} />\r\n                            <Switch label=\"Enable Multi-Slicing\" labelClass=\"width-12\" checked={options.enableMultiSlicing} onChange={(e) => onSwitched('enableMultiSlicing', e, this.props)} />\r\n                            <div className=\"form-field\">\r\n                                <InlineFormLabel width={12}>Label Position</InlineFormLabel>\r\n                                <Select\r\n                                    width={10}\r\n                                    options={valuePositions}\r\n                                    defaultValue={valuePositions[0]}\r\n                                    onChange={(e) => onValueChanged('labelPosition', e.value, this.props)}\r\n                                    value={valuePositions.find(item => item.value === options.labelPosition)}></Select>\r\n                            </div>\r\n                            <div className=\"form-field\">\r\n                                <InlineFormLabel width={12}>Value Position</InlineFormLabel>\r\n                                <Select\r\n                                    width={10}\r\n                                    options={valuePositions}\r\n                                    defaultValue={valuePositions[0]}\r\n                                    onChange={(e) => onValueChanged('valuePosition', e.value, this.props)}\r\n                                    value={valuePositions.find(item => item.value === options.valuePosition)}></Select>\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {options.isWaterfallChart &&\r\n                    <div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Positive Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.positiveColor} onChange={(e) => onValueChanged('positiveColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Negative Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.negativeColor} onChange={(e) => onValueChanged('negativeColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Switch label=\"Show Sum At End\" labelClass=\"width-12\" checked={options.showSumAtEnd} onChange={(e) => onSwitched('showSumAtEnd', e, this.props)} />\r\n                        {options.showSumAtEnd &&\r\n                            <div>\r\n                                <FormField label=\"Sum Label\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('sumlabel', e, this.props)} value={options.sumlabel || ''} />\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Connector Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.connectorColor} onChange={(e) => onValueChanged('connectorColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <FormField label=\"Connector Opacity\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('connectorAlpha', e, this.props)} value={options.connectorAlpha || ''} />\r\n                        <FormField label=\"Connector Thikness\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('connectorThickness', e, this.props)} value={options.connectorThickness || ''} />\r\n                    </div>\r\n                }\r\n                {options.isZoomlineChart &&\r\n                    <div>\r\n                        <FormField label=\"Pixel Per Point\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('pixelsPerPoint', e, this.props)} value={options.pixelsPerPoint || ''} />\r\n                        <FormField label=\"Pixel Per Label\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('pixelsPerLabel', e, this.props)} value={options.pixelsPerLabel || ''} />\r\n                        <FormField label=\"No of Visible Labels\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('numVisibleLabels', e, this.props)} value={options.numVisibleLabels || ''} />\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Zoom Pane Bg Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.zoomPaneBgColor} onChange={(e) => onValueChanged('zoomPaneBgColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <LegacyForms.FormField label=\"Zoom Pane Opacity\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('zoomPaneBgAlpha', e, this.props)} value={options.zoomPaneBgAlpha || ''} />\r\n                    </div>\r\n                }\r\n\r\n            </OptionsGroup>\r\n\r\n            {/*Caption * subcaption*/}\r\n            <OptionsGroup title=\"Caption/Sub-Caption\" key=\"Caption/Sub-Caption\" defaultToClosed={true}>\r\n                <FormField label=\"Caption\" labelWidth={9} inputWidth={13} type=\"text\" onChange={(e) => onChanged('caption', e, this.props)} value={options.caption || \"\"} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Caption Font</InlineFormLabel>\r\n                    <Select width={13} options={fontFamily}\r\n                        onChange={(e) => onValueChanged('captionFont', e.value, this.props)}\r\n                        value={fontFamily.find(item => item.value === options.captionFont)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Caption Size</InlineFormLabel>\r\n                    <Select width={13} options={FontSizes}\r\n                        onChange={(e) => onValueChanged('captionFontSize', e.value, this.props)}\r\n                        value={FontSizes.find(item => item.value === options.captionFontSize)}></Select>\r\n                </div>\r\n                <Switch label=\"Caption Bold\" labelClass=\"width-9\" checked={options.captionFontBold} onChange={(e) => onSwitched('captionFontBold', e, this.props)} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Caption Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.captionFontColor} onChange={(e: any) => onValueChanged('captionFontColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FormField label=\"Sub Caption\" labelWidth={9} inputWidth={13} type=\"text\" onChange={(e) => onChanged('subCaption', e, this.props)} value={options.subCaption || \"\"} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Sub Caption Font</InlineFormLabel>\r\n                    <Select width={13} options={fontFamily}\r\n                        onChange={(e) => onValueChanged('subcaptionFont', e.value, this.props)}\r\n                        value={fontFamily.find(item => item.value === options.subcaptionFont)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Sub Caption Size</InlineFormLabel>\r\n                    <Select width={13} options={FontSizes}\r\n                        onChange={(e) => onValueChanged('subcaptionFontSize', e.value, this.props)}\r\n                        value={FontSizes.find(item => item.value === options.subcaptionFontSize)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Sub-Caption Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.subcaptionFontColor} onChange={(e) => onValueChanged('subcaptionFontColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Switch label=\"Sub Caption Bold\" labelClass=\"width-9\" checked={options.subcaptionFontBold} onChange={(e) => onSwitched('subcaptionFontBold', e, this.props)} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Caption Alignment</InlineFormLabel>\r\n                    <Select width={10} options={captionAlignment} defaultValue={captionAlignment[0]}\r\n                        onChange={(e) => onValueChanged('captionAlignment', e.value, this.props)}\r\n                        value={captionAlignment.find(item => item.value === options.captionAlignment)}></Select>\r\n                </div>\r\n            </OptionsGroup>\r\n\r\n            {/*X-Axis*/}\r\n            <OptionsGroup title=\"X-Axis Label\" key=\"X-Axis Label\" defaultToClosed={true}>\r\n                {/*<PanelOptionsGroup title=\"X-Axis\">*/}\r\n                <FormField label=\"X-Axis Label\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('xAxisName', e, this.props)} value={options.xAxisName || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>X-Axis Font</InlineFormLabel>\r\n                    <Select width={10} options={fontFamily}\r\n                        onChange={(e) => onValueChanged('xAxisNameFont', e.value, this.props)}\r\n                        value={fontFamily.find(item => item.value === options.xAxisNameFont)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>X-Axis Font-Size</InlineFormLabel>\r\n                    <Select width={10} options={FontSizes}\r\n                        onChange={(e) => onValueChanged('xAxisNameFontSize', e.value, this.props)}\r\n                        value={FontSizes.find(item => item.value === options.xAxisNameFontSize)}></Select>\r\n                </div>\r\n                <Switch label=\"X-Axis Font-Bold\" labelClass=\"width-12\" checked={options.xAxisNameFontBold} onChange={(e) => onSwitched('xAxisNameFontBold', e, this.props)} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>X-Axis Bg-Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.xAxisNameBgColor} onChange={(e) => onValueChanged('xAxisNameBgColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>X-Axis Border Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.xAxisNameBorderColor} onChange={(e) => onValueChanged('xAxisNameBorderColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FormField label=\"X-Axis Border Thickness\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('xAxisNameBorderThickness', e, this.props)} value={options.xAxisNameBorderThickness || ''} />\r\n                <FormField label=\"X-Axis Border Radius\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('xAxisNameBorderRadius', e, this.props)} value={options.xAxisNameBorderRadius || ''} />\r\n                <FormField label=\"X-Axis Border padding\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('xAxisNameBorderPadding', e, this.props)} value={options.xAxisNameBorderPadding || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>X-Axis Position</InlineFormLabel>\r\n                    <Select width={10} options={axisPositions}\r\n                        defaultValue={axisPositions[0]}\r\n                        onChange={(e) => onValueChanged('xAxisPosition', e.value, this.props)}\r\n                        value={axisPositions.find(item => item.value === options.xAxisPosition)}></Select>\r\n                </div>\r\n            </OptionsGroup>\r\n\r\n            {/*Y-Axis*/}\r\n            <OptionsGroup title=\"Y-Axis Label\" key=\"Y-Axis Label\" defaultToClosed={true}>\r\n                <FormField label=\"Y-Axis Label\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('yAxisName', e, this.props)} value={options.yAxisName || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Y-Axis Font</InlineFormLabel>\r\n                    <Select\r\n                        width={10}\r\n                        options={fontFamily}\r\n                        onChange={(e) => onValueChanged('yAxisNameFont', e.value, this.props)}\r\n                        value={fontFamily.find(item => item.value === options.yAxisNameFont)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Y-Axis Font-Size</InlineFormLabel>\r\n                    <Select\r\n                        width={10}\r\n                        options={FontSizes}\r\n                        onChange={(e) => onValueChanged('yAxisNameFontSize', e.value, this.props)}\r\n                        value={FontSizes.find(item => item.value === options.yAxisNameFontSize)}></Select>\r\n                </div>\r\n                <Switch label=\"Y-Axis Font-Bold\" labelClass=\"width-12\" checked={options.yAxisNameFontBold} onChange={(e) => onSwitched('yAxisNameFontBold', e, this.props)} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Y-Axis Bg-Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.yAxisNameBgColor} onChange={(e) => onValueChanged('yAxisNameBgColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Y-Axis Border Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.yAxisNameBorderColor} onChange={(e) => onValueChanged('yAxisNameBorderColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FormField label=\"Y-Axis Border Thickness\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('yAxisNameBorderThickness', e, this.props)} value={options.yAxisNameBorderThickness || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Y-Axis Label Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.yAxisNameFontColor} onChange={(e) => onValueChanged('yAxisNameFontColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FormField label=\"X-Axis Label Color\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('xAxisNameFontColor', e, this.props)} value={options.xAxisNameFontColor} />\r\n                <FormField label=\"Y-Axis Border Radius\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('yAxisNameBorderRadius', e, this.props)} value={options.yAxisNameBorderRadius || ''} />\r\n                <FormField label=\"Y-Axis Border padding\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('yAxisNameBorderPadding', e, this.props)} value={options.yAxisNameBorderPadding || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={12}>Y-Axis Position</InlineFormLabel>\r\n                    <Select width={10} options={axisPositions}\r\n                        onChange={(e) => onValueChanged('yAxisPosition', e.value, this.props)}\r\n                        value={axisPositions.find(item => item.value === options.yAxisPosition)}></Select>\r\n                </div>\r\n                <FormField label=\"Y-Axis Min Value\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('yAxisMinValue', e, this.props)} value={options.yAxisMinValue || ''} />\r\n                <FormField label=\"Y-Axis Max Value\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('yAxisMaxValue', e, this.props)} value={options.yAxisMaxValue || ''} />\r\n            </OptionsGroup>\r\n\r\n            {/*colors*/}\r\n            <OptionsGroup title=\"Color & Themes\" key=\"Color\" defaultToClosed={true}>\r\n                <FormField label=\"Palette colors\" labelWidth={8} inputWidth={13} type=\"text\" onChange={(e) => onChanged('palettecolors', e, this.props)} value={options.palettecolors || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={8}>Theme</InlineFormLabel>\r\n                    <Select width={13} options={themes} defaultValue={themes[0]}\r\n                        onChange={(e) => onValueChanged('theme', e.value, this.props)}\r\n                        value={themes.find(item => item.value === options.theme)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={8}>Toolbar Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.toolbarButtonColor} onChange={(e) => onValueChanged('toolbarButtonColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {options.isGauge &&\r\n                    <div className=\"form-field\">\r\n                        <FormField label=\"Gauge Fill Mix\" labelWidth={8} inputWidth={13} type=\"text\" onChange={(e) => onChanged('gaugeFillMix', e, this.props)} value={options.gaugeFillMix || ''} />\r\n                        <FormField label=\"Gauge Fill Ratio\" labelWidth={8} inputWidth={13} type=\"text\" onChange={(e) => onChanged('gaugeFillRatio', e, this.props)} value={options.gaugeFillRatio || ''} />\r\n                    </div>}\r\n            </OptionsGroup>\r\n\r\n            {/*Display & cosmetics */}\r\n            <OptionsGroup title=\"Display & Value Cosmetics\" key=\"Display & Value Cosmetics\" defaultToClosed={true}>\r\n                <Switch label=\"Export Enabled\" labelClass=\"width-12\" checked={options.exportEnabled} onChange={(e) => onSwitched('exportEnabled', e, this.props)} />\r\n                <Switch label=\"ToolTip Show/Hide\" labelClass=\"width-12\" checked={options.showToolTip} onChange={(e) => onSwitched('showToolTip', e, this.props)} />\r\n                {options.showToolTip &&\r\n                    <div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Tooltip Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.toolTipColor} onChange={(e) => onValueChanged('toolTipColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Tooltip Bg Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.toolTipBgColor} onChange={(e) => onValueChanged('toolTipBgColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <FormField label=\"Tooltip Border Thikness\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('toolTipBorderThickness', e, this.props)} value={options.toolTipBorderThickness || ''} />\r\n                        <FormField label=\"Tooltip Bg Opacity\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('toolTipBgAlpha', e, this.props)} value={options.toolTipBgAlpha || ''} />\r\n                        <FormField label=\"Tooltip Border Radius\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('toolTipBorderRadius', e, this.props)} value={options.toolTipBorderRadius || ''} />\r\n                        <FormField label=\"Tooltip Padding\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('toolTipPadding', e, this.props)} value={options.toolTipPadding || ''} />\r\n                    </div>\r\n                }\r\n                <Switch label=\"Display Values\" labelClass=\"width-12\" checked={options.showValues} onChange={(e) => onSwitched('showValues', e, this.props)} />\r\n                {options.showValues &&\r\n                    <div>\r\n                        <FormField label=\"Number Prefix\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('numberPrefix', e, this.props)} value={options.numberPrefix || ''} />\r\n\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Rotate Values</InlineFormLabel>\r\n                            <Select width={10} options={rotateValues} defaultValue={rotateValues[0]}\r\n                                onChange={(e) => onValueChanged('rotateValues', e.value, this.props)}\r\n                                value={rotateValues.find(item => item.value === options.rotateValues)}></Select>\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Value Font Size</InlineFormLabel>\r\n                            <Select width={10} options={FontSizes}\r\n                                onChange={(e) => onValueChanged('valueFontSize', e.value, this.props)}\r\n                                value={FontSizes.find(item => item.value === options.valueFontSize)}></Select>\r\n                        </div>\r\n                        <Switch label=\"Value Font Bold\" labelClass=\"width-12\" checked={options.valueFontBold} onChange={(e) => onSwitched('valueFontBold', e, this.props)} />\r\n                    </div>\r\n\r\n                }\r\n            </OptionsGroup>\r\n\r\n            <OptionsGroup title=\"Labels\" key=\"Labels\" defaultToClosed={true}>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Label Display</InlineFormLabel>\r\n                    <Select\r\n                        width={11}\r\n                        options={labels}\r\n                        defaultValue={labels[0]}\r\n                        onChange={(e) => onValueChanged('labelDisplay', e.value, this.props)}\r\n                        value={labels.find(item => item.value === options.labelDisplay)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Label Font</InlineFormLabel>\r\n                    <Select\r\n                        width={11}\r\n                        options={fontFamily}\r\n                        defaultValue={fontFamily[0]}\r\n                        onChange={(e) => onValueChanged('labelFont', e.value, this.props)}\r\n                        value={fontFamily.find(item => item.value === options.labelFont)}></Select>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Label Font Size</InlineFormLabel>\r\n                    <Select\r\n                        width={11}\r\n                        options={FontSizes}\r\n                        defaultValue={FontSizes[7]}\r\n                        onChange={(e) => onValueChanged('labelFontSize', e.value, this.props)}\r\n                        value={FontSizes.find(item => item.value === options.labelFontSize)}></Select>\r\n                </div>\r\n                <Switch label=\"Label Font Bold\" labelClass=\"width-9\" checked={options.labelFontBold} onChange={(e) => onSwitched('labelFontBold', e, this.props)} />\r\n                <FormField label=\"Pivot Radius\" labelWidth={9} inputWidth={11} type=\"text\" onChange={(e) => onChanged('pivotRadius', e, this.props)} value={options.pivotRadius || ''} />\r\n                <FormField label=\"Pivot Fill Mix\" labelWidth={9} inputWidth={11} type=\"text\" onChange={(e) => onChanged('pivotFillMix', e, this.props)} value={options.pivotFillMix || ''} />\r\n                <FormField label=\"Pivot Fill Ratio\" labelWidth={9} inputWidth={11} type=\"text\" onChange={(e) => onChanged('pivotFillRatio', e, this.props)} value={options.pivotFillRatio || ''} />\r\n                <div className=\"form-field\">\r\n                    <InlineFormLabel width={9}>Pivot Fill Color</InlineFormLabel>\r\n                    <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                        <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                            <ColorPicker color={options.pivotFillColor} onChange={(e) => onValueChanged('pivotFillColor', e, this.props)}></ColorPicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </OptionsGroup>\r\n\r\n            {/*Border and background*/}\r\n            <OptionsGroup title=\"Border And Background\" key=\"Border And Background\" defaultToClosed={true}>\r\n                <Switch label=\"Chart Border\" labelClass=\"width-10\" checked={options.showBorder} onChange={(e) => onSwitched('showBorder', e, this.props)} />\r\n                {options.showBorder &&\r\n                    <div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={10}>Border Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.borderColor} onChange={(e) => onValueChanged('borderColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <FormField label=\"Border Thickness\" labelWidth={10} inputWidth={11} type=\"text\" onChange={(e) => onChanged('borderThickness', e, this.props)} value={options.borderThickness || ''} />\r\n                        <FormField label=\"Border Opacity\" labelWidth={10} inputWidth={11} type=\"text\" onChange={(e) => onChanged('borderAlpha', e, this.props)} value={options.borderAlpha || ''} />\r\n                    </div>\r\n                }\r\n                <Switch label=\"Crossline Show/Hide\" labelClass=\"width-10\" checked={options.drawCrossLine} onChange={(e) => onSwitched('drawCrossLine', e, this.props)} />\r\n                {options.drawCrossLine &&\r\n                    <div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={10}>Crossline Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.crosslinecolor} onChange={(e) => onValueChanged('crosslinecolor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <FormField label=\"Crossline Opacity\" labelWidth={10} inputWidth={11} type=\"text\" onChange={(e) => onChanged('crossLineAlpha', e, this.props)} value={options.crossLineAlpha || ''} />\r\n                    </div>\r\n                }\r\n            </OptionsGroup>\r\n\r\n\r\n            <div>\r\n                {(pieAndDoughnutCharts.includes(options.charttype) || multiSeriesChats.includes(options.charttype)) &&\r\n                    <div>\r\n                        <OptionsGroup title=\"Legends\" key=\"Legends\" defaultToClosed={true}>\r\n                            <Switch label=\"Legends Show/Hide\" labelClass=\"width-12\" checked={options.showLegend} onChange={(e) => onSwitched('showLegend', e, this.props)} />\r\n                            {options.showLegend &&\r\n                                <div>\r\n                                    <FormField label=\"Legend Caption\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('legendCaption', e, this.props)} value={options.legendCaption || ''} />\r\n                                    <Switch label=\"Legend Caption Font Bold\" labelClass=\"width-12\" checked={options.legendCaptionBold} onChange={(e) => onSwitched('legendCaptionBold', e, this.props)} />\r\n                                    <div className=\"form-field\">\r\n                                        <InlineFormLabel width={12}>Legend Caption Font</InlineFormLabel>\r\n                                        <Select width={10} options={fontFamily}\r\n                                            onChange={(e) => onValueChanged('legendCaptionFont', e.value, this.props)}\r\n                                            value={fontFamily.find(item => item.value === options.legendCaptionBold)}></Select>\r\n                                    </div>\r\n                                    <div className=\"form-field\">\r\n                                        <InlineFormLabel width={12}>Legend Caption Font Size</InlineFormLabel>\r\n                                        <Select width={10} options={FontSizes}\r\n                                            onChange={(e) => onValueChanged('legendCaptionFontSize', e.value, this.props)}\r\n                                            value={FontSizes.find(item => item.value === options.legendCaptionFontSize)}></Select>\r\n                                    </div>\r\n                                    <Switch label=\"Legend Item Font Bold\" labelClass=\"width-12\" checked={options.legendItemFontBold} onChange={(e) => onSwitched('legendItemFontBold', e, this.props)} />\r\n                                    <div className=\"form-field\">\r\n                                        <InlineFormLabel width={12}>Legend Item Font</InlineFormLabel>\r\n                                        <Select width={10} options={fontFamily}\r\n                                            defaultValue={fontFamily[0]}\r\n                                            onChange={(e) => onValueChanged('legendItemFont', e.value, this.props)}\r\n                                            value={fontFamily.find(item => item.value === options.legendItemFont)}></Select>\r\n                                    </div>\r\n                                    <FormField label=\"Legend Item Font Size\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('legendItemFontSize', e, this.props)} value={options.legendItemFontSize || ''} />\r\n                                    <div className=\"form-field\">\r\n                                        <InlineFormLabel width={12}>Legend Item Font Size</InlineFormLabel>\r\n                                        <Select\r\n                                            width={10}\r\n                                            options={FontSizes}\r\n                                            defaultValue={FontSizes[7]}\r\n                                            onChange={(e) => onValueChanged('legendItemFontSize', e.value, this.props)}\r\n                                            value={FontSizes.find(item => item.value === options.legendItemFontSize)}></Select>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </OptionsGroup>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            {(options.isParetoChart || options.charttype == 'line' || options.charttype === 'scrollline2d' ||\r\n                options.isLineChart || options.charttype == 'isZoomlineChart' || options.charttype == 'radar') &&\r\n                <div>\r\n                    <OptionsGroup title=\"Anchors\" key=\"Anchors\" defaultToClosed={true}>\r\n                        <FormField label=\"Anchor Radius\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('anchorRadius', e, this.props)} value={options.anchorRadius || ''} />\r\n                        <FormField label=\"Anchor Border Thikness\" labelWidth={12} inputWidth={10} type=\"text\" onChange={(e) => onChanged('anchorBorderThickness', e, this.props)} value={options.anchorBorderThickness || ''} />\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Anchor Bg Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.anchorBgColor} onChange={(e) => onValueChanged('anchorBgColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                            <InlineFormLabel width={12}>Anchor Border Color</InlineFormLabel>\r\n                            <div className=\"thresholds-row-input-inner-color\" style={{ padding: '7px' }}>\r\n                                <div className=\"thresholds-row-input-inner-color-colorpicker\">\r\n                                    <ColorPicker color={options.anchorBorderColor} onChange={(e) => onValueChanged('anchorBorderColor', e, this.props)}></ColorPicker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </OptionsGroup>\r\n                </div>\r\n            }\r\n\r\n            {/*Add Remove Node*/}\r\n            <OptionsGroup title=\"Add & Remove\" key=\"Add & Remove\" defaultToClosed={true}>\r\n            <div>\r\n                    <div className=\"gf-form-inline\">\r\n                        <div className=\"gf-form gf-form--grow\">\r\n                            <textarea rows={20} className=\"gf-form-input width-100\" onChange={(e) => onAddRemoveChange(e,this.props)}\r\n                                placeholder=\"Please refer help section for boilerplate code.\" value={options.addRemove} required />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"gf-form gf-form--v-stretch\">\r\n                        <button className=\"btn btn-success\" onClick={(e) => onNodeClick(e,this.props)} type=\"submit\" disabled={options.btnEnabled}>Apply </button>\r\n                    </div>\r\n                </div>\r\n            </OptionsGroup>\r\n        </>);\r\n    }\r\n\r\n};","import { ChangeEvent, MouseEvent } from 'react';\r\n\r\nexport function onWidgetTypeChanged({ value }: any,props:any){\r\n    if (value === 'angulargauge' ) {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isGauge':true ,'isArea': false, \r\n      'isDualAxis': false, 'isScrollCombi2D': false,'isZoomlineChart': false, 'isLineChart': false, 'isBarAndColumnChart': false});\r\n    }else if (value === 'dragnode'){\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isGauge':false ,'isArea': false, \r\n      'isDualAxis': false, 'isScrollCombi2D': false,'isZoomlineChart': false, 'isLineChart': false, 'isBarAndColumnChart': false});\r\n    }\r\n  }\r\n\r\nexport function onPropsTextChange(event: ChangeEvent<HTMLTextAreaElement>, props: any) {\r\n    if (event.target.value == \"\") {\r\n        props.onOptionsChange({ ...props.options, 'staticProps': event.target.value, 'SbtnEnabled': true })\r\n    }\r\n    else {\r\n        props.onOptionsChange({ ...props.options, 'staticProps': event.target.value, 'SbtnEnabled': false })\r\n    }\r\n}\r\n\r\nexport function onPropsApplyClick(event: MouseEvent<HTMLButtonElement>, props: any) {\r\n    let staticChartOptions = JSON.parse(props.options.statiProps)\r\n    props.onOptionsChange({ ...props.options, 'staticProps': staticChartOptions, 'SbtnEnabled': false })\r\n}","/**\r\n * Change Chart type based on chart attribute.\r\n */\r\nexport function onGraphModeChanged({ value }: any, props: any) {\r\n\r\n    if (value === 'zoomline' || value === 'zoomlinedy') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isZoomlineChart': true, 'isLineChart': false, 'isBarAndColumnChart': false, 'isScrollCharts': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'msline') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isZoomlineChart': false, 'isLineChart': true, 'isBarAndColumnChart': false, 'isScrollCharts': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'scrollStackedBar2D') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isZoomlineChart': false, 'isLineChart': false, 'isBarAndColumnChart': false, 'isScrollCharts': true, 'isDualAxis': false , 'isArea': false, 'isGauge':false});\r\n    }\r\n    else if (value === 'radar') {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isZoomlineChart': false, 'isLineChart': false, 'isBarAndColumnChart': false, 'isScrollCharts': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n    else {\r\n        props.onOptionsChange({ ...props.options, 'charttype': value, 'isZoomlineChart': false, 'isLineChart': false, 'isBarAndColumnChart': true, 'isScrollCharts': false, 'isDualAxis': false, 'isArea': false, 'isGauge':false });\r\n    }\r\n}","/**\r\n * Change Chart type based on chart attribute.\r\n */\r\nexport function onCombinationTypeChanged({ value }: any,props:any){\r\n    if (value === 'mscombi2d' || value === 'mscombi3d') {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isArea': true, 'isDualAxis': false, 'isScrollCombi2D': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'scrollcombi2d') {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isArea': true, 'isDualAxis': false, 'isScrollCombi2D': true, 'isGauge':false });\r\n    }\r\n    else if (value === 'mscolumnline3d' || value === 'stackedcolumn2dline' || value === 'stackedcolumn3dline') {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isArea': false, 'isDualAxis': false, 'isScrollCombi2D': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'mscombidy2d' || value === 'mscombidy3d') {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isArea': true, 'isDualAxis': true, 'isScrollCombi2D': false, 'isGauge':false });\r\n    }\r\n    else if (value === 'scrollcombidy2d') {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isArea': true, 'isDualAxis': true, 'isScrollCombi2D': true, 'isGauge':false })\r\n    }\r\n    else {\r\n      props.onOptionsChange({ ...props.options, 'charttype': value, 'isDualAxis': true, 'isArea': false, 'isGauge':false });\r\n    }\r\n  }","import { ChangeEvent, MouseEvent } from 'react';\r\n\r\nexport function onAddRemoveChange(event: ChangeEvent<HTMLTextAreaElement>, props: any) {\r\n\r\n    if (event.target.value == \"\") {\r\n        props.onOptionsChange({ ...props.options, 'addRemove': event.target.value, 'btnEnabled': true })\r\n    }\r\n    else {\r\n        props.onOptionsChange({ ...props.options, 'addRemove': event.target.value, 'btnEnabled': false })\r\n    }\r\n}\r\n\r\nexport function onNodeClick(event: MouseEvent<HTMLButtonElement>, props: any) {\r\n    let staicChartOptions = JSON.parse(props.options.addRemove)\r\n    props.onOptionsChange({ ...props.options, 'data': staicChartOptions, 'btnEnabled': false })\r\n}","let colorObj={\r\n    \"colorRange\": {\r\n      \"color\": [{\r\n          \"minValue\": \"0\",\r\n          \"maxValue\": \"60\",\r\n          \"code\": \"#e44a00\"\r\n        },\r\n        {\r\n          \"minValue\": \"60\",\r\n          \"maxValue\": \"150\",\r\n          \"code\": \"#f8bd19\"\r\n        },\r\n        {\r\n          \"minValue\": \"150\",\r\n          \"maxValue\": \"300\",\r\n          \"code\": \"#6baa01\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\nexport interface Settings {\r\n    //Single Series\r\n    isParetoChart: any;\r\n    isPieOrDoughnutChart: any;\r\n    isBarAndColumnChart: any;\r\n    isScrollCombi2D: any;\r\n    isLineChart: any;\r\n    isWaterfallChart: any;\r\n\r\n    //Multiseries\r\n    isScrollCharts: any;\r\n    isZoomlineChart: any;\r\n\r\n    //Combination\r\n    isArea: any;\r\n    isDualAxis: any;\r\n\r\n    //WWidgets\r\n   isGauge: any;\r\n}\r\n\r\nexport interface ChartOptions extends Settings {   \r\n    \r\n\r\n    btnEnabled: any;\r\n    atext: any;\r\n    dynamicProps: any;\r\n\r\n    staticProps: any;\r\n    SbtnEnabled: any;\r\n\r\n    charttype: any;\r\n    connectorThickness: any;\r\n    connectorAlpha: any;\r\n    connectorColor: any;\r\n    sumlabel: any;\r\n    showSumAtEnd: any;\r\n    negativeColor: any;\r\n    positiveColor: any;\r\n    valuePosition: any;\r\n    labelPosition: any;\r\n    minAngleForValue: any;\r\n    centerLabel: any;\r\n    defaultCenterLabel: any;\r\n    enableMultiSlicing: any;\r\n    showPercentValues: any;\r\n    lineDashGap: any;\r\n    lineDashed: any;\r\n    lineDashLen: any;\r\n    lineThickness: any;\r\n    lineAlpha: any;\r\n    lineColor: any;\r\n    showLineValues: any;\r\n    placeValuesInside: any;\r\n    scrollShowButtons: any;\r\n    flatScrollBars: any;\r\n    scrollColor: any;\r\n    scrollheight: any;\r\n    numVisiblePlot: any;\r\n\r\n    caption: any;\r\n    captionFont: any;\r\n    subCaption: any;\r\n    captionAlignment: any;\r\n    subcaptionFontBold: any;\r\n    subcaptionFontColor: any;\r\n    subcaptionFontSize: any;\r\n    subcaptionFont: any;\r\n    captionFontColor: any;\r\n    captionFontBold: any;\r\n    captionFontSize: any;\r\n\r\n    xAxisName: any;\r\n    xAxisNameBgColor: any;\r\n    xAxisNameBorderColor: any;\r\n    xAxisNameBorderThickness: any;\r\n    xAxisNameBorderRadius: any;\r\n    xAxisNameBorderPadding: any;\r\n    xAxisPosition: any;\r\n    xAxisNameFontBold: any;\r\n    xAxisNameFontSize: any;\r\n    xAxisNameFont: any;\r\n    xAxisNameFontColor: any;\r\n    xAxisValueFontColor: any;\r\n    xAxisMinValue: any;\r\n    xAxisMaxValue: any;\r\n\r\n    yAxisName: any;\r\n    yAxisNameFont: any;\r\n    yAxisNameFontSize: any;\r\n    yAxisNameFontBold: any;\r\n    yAxisNameBgColor: any;\r\n    yAxisNameBorderColor: any;\r\n    yAxisNameBorderThickness: any;\r\n    yAxisNameFontColor: any;\r\n    yAxisValueFontColor: any;\r\n    yAxisNameBorderRadius: any;\r\n    yAxisNameBorderPadding: any;\r\n    yAxisPosition: any;\r\n    yAxisMinValue: any;\r\n    yAxisMaxValue: any;\r\n\r\n    theme: any;\r\n    toolbarButtonColor: any;\r\n    palettecolors: any;\r\n\r\n    valueFontSize: any;\r\n    rotateValues: any;\r\n    valueFontBold: any;\r\n    numberPrefix: any;\r\n    showValues: any;\r\n    toolTipPadding: any;\r\n    toolTipBorderRadius: any;\r\n    toolTipBgAlpha: any;\r\n    toolTipBorderThickness: any;\r\n    toolTipBgColor: any;\r\n    toolTipColor: any;\r\n    showToolTip: any;\r\n    exportEnabled: any;\r\n\r\n    labelFontBold: any;\r\n    labelFontSize: any;\r\n    labelFont: any;\r\n    labelDisplay: any;\r\n   \r\n    crossLineAlpha: any;\r\n    crosslinecolor: any;\r\n    drawCrossLine: any;\r\n    borderAlpha: any;\r\n    borderThickness: any;\r\n    borderColor: any;\r\n    showBorder: any;\r\n\r\n    legendItemFontSize: any;\r\n    legendItemFont: any;\r\n    legendCaptionFontSize: any;\r\n    legendItemFontBold: any;\r\n    legendCaption: any;\r\n    legendCaptionBold: any;\r\n    showLegend: any;\r\n\r\n    anchorBorderColor: any;\r\n    anchorBgColor: any;\r\n    anchorBorderThickness: any;\r\n    anchorRadius: any;\r\n\r\n    zoomPaneBgColor: any;\r\n    numVisibleLabels: any;\r\n    pixelsPerPoint: any;\r\n    pixelsPerLabel: any;\r\n    zoomPaneBgAlpha: any;\r\n\r\n    plotFillColor: any;\r\n    snumbersuffix: any;\r\n    plottooltext: any;\r\n    formatnumberscale: any;\r\n    syaxisname: any;\r\n\r\n    minorTMThickness: any;\r\n    minorTMHeight: any;\r\n    minorTMAlpha: any;\r\n    minorTMColor: any;\r\n    majorTMThickness: any;\r\n    majorTMHeight: any;\r\n    majorTMAlpha: any;\r\n    majorTMColor: any;\r\n    minorTMNumber: any;\r\n    majorTMNumber: any;\r\n    gaugeFillRatio: any;\r\n    gaugeFillMix: any;\r\n\r\n    pivotRadius: any;\r\n    pivotFillMix: any;\r\n    pivotFillRatio: any;\r\n    pivotFillColor: any;\r\n\r\n    data:any;\r\n\r\n    addRemove: any;\r\n\r\n}\r\n\r\nexport const defaults: ChartOptions = {\r\n\r\n    /**Advance view */\r\n    atext: '',\r\n    dynamicProps: new Object(),\r\n    btnEnabled: 1,\r\n\r\n    data:JSON.stringify(colorObj),\r\n    staticProps: JSON.stringify(colorObj),\r\n    SbtnEnabled: 1,\r\n\r\n    /**Single series props */\r\n    charttype: 'column2d',\r\n    isParetoChart: undefined,\r\n    isPieOrDoughnutChart: undefined,\r\n    isBarAndColumnChart: undefined,\r\n    isScrollCombi2D: undefined,\r\n    isLineChart: undefined,\r\n    isWaterfallChart: undefined,\r\n    isScrollCharts:undefined,\r\n    isZoomlineChart:undefined,\r\n    isArea:undefined,\r\n    isDualAxis:undefined,\r\n    isGauge: undefined,\r\n\r\n    connectorThickness: '',\r\n    connectorAlpha: '',\r\n    connectorColor: '',\r\n    sumlabel: '',\r\n    showSumAtEnd: 1,\r\n    negativeColor: '',\r\n    positiveColor: '',\r\n\r\n    // Doughnut Chart & Pie Chart\r\n    valuePosition: '',\r\n    labelPosition: '',\r\n    minAngleForValue: '',\r\n    centerLabel: '',\r\n    defaultCenterLabel: '',\r\n    enableMultiSlicing: 0,\r\n    showPercentValues: 0,\r\n\r\n    //Paretro Chart\r\n    lineDashGap: '',\r\n    lineDashed: '',\r\n    lineDashLen: '',\r\n    lineThickness: '',\r\n    lineAlpha: '',\r\n    lineColor: '',\r\n    showLineValues: '',\r\n    placeValuesInside: '',\r\n    scrollShowButtons: '',\r\n    flatScrollBars: 1,\r\n    scrollColor: '',\r\n    scrollheight: '',\r\n    numVisiblePlot: '',\r\n\r\n\r\n    //Caption\r\n    caption: '', captionFont: \"\", captionFontSize: 14, captionFontColor: \"\", captionAlignment: 'center', captionFontBold: 0,\r\n    //Subcaption\r\n    subCaption: \"\", subcaptionFont: '', subcaptionFontSize: 12, subcaptionFontColor: '', subcaptionFontBold: 0,\r\n\r\n    //X-Axis\r\n    xAxisName: '',xAxisNameFont: '', xAxisNameFontSize: 14, xAxisNameFontBold: 0, xAxisNameBgColor: '',\r\n    xAxisNameBorderColor: '', xAxisNameBorderThickness: '', xAxisNameFontColor: '', xAxisNameBorderRadius: '', xAxisNameBorderPadding: '',\r\n    xAxisValueFontColor: \"\", xAxisMinValue: \"\",xAxisMaxValue: \"\",xAxisPosition:\"\",\r\n    //Y-Axis\r\n    yAxisName: '',yAxisNameFont: '', yAxisNameFontSize: 14, yAxisNameFontBold: 0, yAxisNameBgColor: '',\r\n    yAxisNameBorderColor: '', yAxisNameBorderThickness: '', yAxisNameFontColor: '', yAxisNameBorderRadius: '', yAxisNameBorderPadding: '',\r\n    yAxisMaxValue: \"\",yAxisPosition: \"\",yAxisMinValue: \"\",yAxisValueFontColor: '',\r\n\r\n    //Colors&theme\r\n    theme: 'fusion',\r\n    toolbarButtonColor: '',\r\n    palettecolors: '',\r\n\r\n    //Display & cosmetics\r\n    valueFontSize: '',\r\n    rotateValues: 0,\r\n    valueFontBold: 0,\r\n    numberPrefix: '',\r\n    showValues: 1,\r\n    toolTipPadding: '',\r\n    toolTipBorderRadius: '',\r\n    toolTipBgAlpha: '',\r\n    toolTipBorderThickness: '',\r\n    toolTipBgColor: '',\r\n    toolTipColor: '',\r\n    showToolTip: 1,\r\n    exportEnabled: 0,\r\n\r\n\r\n    //Labels\r\n    labelFontBold: '',\r\n    labelFontSize: '',\r\n    labelFont: '',\r\n    labelDisplay: '',\r\n   \r\n    crossLineAlpha: '',\r\n    crosslinecolor: '',\r\n    drawCrossLine: '',\r\n    borderAlpha: '',\r\n    borderThickness: '',\r\n    borderColor: '',\r\n    showBorder: undefined,\r\n\r\n    //Legends\r\n    legendItemFontSize: '',\r\n    legendItemFont: '',\r\n    legendCaptionFontSize: '',\r\n    legendItemFontBold: 0,\r\n    legendCaption: '',\r\n    legendCaptionBold: 0,\r\n    showLegend: 1,\r\n    \r\n    anchorBorderColor: '',\r\n    anchorBgColor: '',\r\n    anchorBorderThickness: '',\r\n    anchorRadius: '',\r\n\r\n    zoomPaneBgColor: '',\r\n    numVisibleLabels: '',\r\n    pixelsPerPoint: '',\r\n    pixelsPerLabel: '',\r\n    zoomPaneBgAlpha:'',\r\n\r\n    plotFillColor:'',\r\n    snumbersuffix: '',\r\n    plottooltext: '',\r\n    formatnumberscale: '',\r\n    syaxisname: '',\r\n\r\n    minorTMThickness: '',\r\n    minorTMHeight: '',\r\n    minorTMAlpha: '',\r\n    minorTMColor: '',\r\n    majorTMThickness: '',\r\n    majorTMHeight: '',\r\n    majorTMAlpha: '',\r\n    majorTMColor: '',\r\n    minorTMNumber: '',\r\n    majorTMNumber: '',\r\n\r\n    gaugeFillRatio: '',\r\n    gaugeFillMix: '',\r\n    pivotRadius: '',\r\n    pivotFillMix: '',\r\n    pivotFillRatio: '',\r\n    pivotFillColor: '',\r\n\r\n    addRemove: '',\r\n}\r\n","import { PanelPlugin } from '@grafana/data';\r\nimport { FusionPanel } from './SimplePanel';\r\nimport { FusionEditor } from './FusionEditor';\r\nimport { defaults, ChartOptions } from 'ChartOptions';\r\n\r\nexport const plugin = new PanelPlugin<ChartOptions>(FusionPanel).setDefaults(defaults).setEditor(FusionEditor);\r\n"],"sourceRoot":""}